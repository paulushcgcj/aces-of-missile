name: Build Game

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch: # Allows manual triggering

jobs:

  build:
    name: Build game
    runs-on: ubuntu-latest    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set execute permissions for publish.sh (Linux/macOS)        
        run: chmod +x tools/publish.sh

      - name: Install .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Run the publish script
        run: tools/publish.sh

      - name: Upload windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: Game-Build-windows
          path: src/Game.Desktop/bin/Release/net8.0/win-x64

      - name: Upload mac artifact
        uses: actions/upload-artifact@v4
        with:
          name: Game-Build-osx-arm
          path: src/Game.Desktop/bin/Release/net8.0/osx-arm64

      - name: Upload linux artifact
        uses: actions/upload-artifact@v4
        with:
          name: Game-Build-linux
          path: src/Game.Desktop/bin/Release/net8.0/linux-x64

  versioning:
    name: Release versioning
    runs-on: ubuntu-latest
    needs: [build]
    outputs:
      tag: ${{ steps.changelog.outputs.tag }}
      clean_changelog: ${{ steps.changelog.outputs.clean_changelog }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Conventional Changelog Update
        uses: TriPSs/conventional-changelog-action@v3
        id: changelog
        with:
          github-token: ${{ github.token }}
          output-file: 'CHANGELOG.md'
          skip-version-file: 'true'
          skip-commit: 'false'
          git-push: 'true'
      
  pre-release-windows:
    name: Pre-release On Windows
    runs-on: windows-latest
    needs: [build, versioning]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: Game-Build-windows
          path: ./tools/artifact/windows

      - name: Install Inno Setup
        run: choco install innosetup -y
  
      - name: Generate Installer
        run: |
          cd tools
          iscc installer.iss

      - name: Upload Installer
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Installer
          path: Output\install-aom.exe

  release:
    name: Release game
    runs-on: ubuntu-latest
    needs: [pre-release-windows,versioning]

    steps:
      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: Windows-Installer
          path: ./tools/Output/windows
            
      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: ${{ needs.versioning.outputs.tag != '' }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          token: ${{ github.token }}
          tag_name: ${{ needs.versioning.outputs.tag }}
          name: ${{ needs.versioning.outputs.tag }}
          body: ${{ needs.versioning.outputs.clean_changelog }}
          files: |            
            LICENSE
            ./tools/Output/windows/install-aom.exe